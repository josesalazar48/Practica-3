/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package views;

import practica3.Matrizcontroller;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author JOSE SALAZAR
 */
public class FrmMatriz extends javax.swing.JDialog {
private Matrizcontroller mz = new Matrizcontroller();
private int [][] matriz;
    /**
     * Creates new form FrmMatriz
     */
       public FrmMatriz(java.awt.Dialog parent, boolean modal, int [][]matriz) {
        super(parent, modal);
        initComponents();
        this.matriz = matriz;
           mostrarMatriz(matriz);
           this.addComponentListener(new java.awt.event.ComponentAdapter() {
        @Override
        public void componentResized(java.awt.event.ComponentEvent evt) {
            java.awt.Dimension size = getContentPane().getSize();

            // Mantener el panel principal ajustado a la ventana
            jPanel1.setBounds(0, 0, size.width, size.height);

            // Mantener el scrollPane ajustado (dejando espacio arriba para el panel de botones)
            jScrollPane1.setBounds(0, 90, size.width, size.height - 90);
        }
    });
    }
       private int[][] convertirObjectAEntero(Object[][] objMatriz) {
    int filas = objMatriz.length;
    int columnas = objMatriz[0].length;
    int[][] nueva = new int[filas][columnas];

    for (int i = 0; i < filas; i++) {
        for (int j = 0; j < columnas; j++) {
            // Asegura que no sea null ni valor inválido
            Object valor = objMatriz[i][j];
            if (valor instanceof Number) {
                nueva[i][j] = ((Number) valor).intValue();
            } else {
                nueva[i][j] = 0; // por seguridad
            }
        }
    }

    return nueva;
}

    public void mostrarMatriz(int[][] matriz) {
     int filas = matriz.length;
    int columnas = matriz[0].length;

    String[] columnasNombres = new String[columnas];
    for (int i = 0; i < columnas; i++) {
        columnasNombres[i] = "Col " + (i + 1);
    }

    DefaultTableModel model = new DefaultTableModel(columnasNombres, 0);

    for (int i = 0; i < filas; i++) {
        Object[] fila = new Object[columnas];
        for (int j = 0; j < columnas; j++) {
            if(matriz[i][j]== 0){
                fila[j] = "*";    
            }else{
            fila[j] = matriz[i][j];
            }
        }
        model.addRow(fila);
    }

    jTable1.setModel(model);

// Configurar tamaño de columnas y filas
int anchoColumna = 60;
int altoFila = 25;

jTable1.setRowHeight(altoFila);
for (int i = 0; i < columnas; i++) {
    jTable1.getColumnModel().getColumn(i).setPreferredWidth(anchoColumna);
}

// Forzar redimensionamiento
jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);

// Calcular tamaño total
int anchoTabla = columnas * anchoColumna;
int altoTabla = filas * altoFila;

// Ajustar tamaño del scroll pane
jScrollPane1.setPreferredSize(new java.awt.Dimension(anchoTabla, altoTabla));
jScrollPane1.setSize(new java.awt.Dimension(anchoTabla, altoTabla));

// Asegurarte de que contiene la tabla y tenga scroll adecuado
jScrollPane1.setViewportView(jTable1);
jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_AS_NEEDED);
jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_AS_NEEDED);

// Refrescar el scroll pane
jScrollPane1.revalidate();
jScrollPane1.repaint();

// Redimensionar ventana
this.setSize(anchoTabla + 60, altoTabla + 160); // espacio extra para bordes
this.setLocationRelativeTo(null);
    }

    // Ajustar alto filas
   





    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        buttoneliminarprimo = new javax.swing.JButton();
        txteliminar = new javax.swing.JTextField();

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(jTable2);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Matriz");
        getContentPane().setLayout(null);

        jPanel1.setLayout(null);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(0, 80, 940, 440);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Que operacion desea realizar?"));
        jPanel2.setLayout(null);

        jLabel1.setText("Escriba un numero que desee eliminar:");
        jPanel2.add(jLabel1);
        jLabel1.setBounds(10, 20, 230, 15);

        buttoneliminarprimo.setText("Eliminar numeros primos");
        buttoneliminarprimo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttoneliminarprimoActionPerformed(evt);
            }
        });
        jPanel2.add(buttoneliminarprimo);
        buttoneliminarprimo.setBounds(10, 40, 170, 25);

        txteliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txteliminarActionPerformed(evt);
            }
        });
        jPanel2.add(txteliminar);
        txteliminar.setBounds(240, 20, 50, 30);

        jPanel1.add(jPanel2);
        jPanel2.setBounds(10, 10, 400, 70);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 0, 1040, 560);

        setSize(new java.awt.Dimension(558, 471));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    

private void ajustarComponentes() {
    int filas = matriz.length;
    int columnas = matriz[0].length;

    int anchoColumna = 60; // ancho de cada columna
    int altoFila = 25;     // alto de cada fila

    int anchoTabla = columnas * anchoColumna;
    int altoTabla = filas * altoFila;

    // Ajustar tamaño del scroll pane para la tabla
    jScrollPane1.setBounds(0, 90, anchoTabla, altoTabla);
    jScrollPane1.setPreferredSize(new java.awt.Dimension(anchoTabla, altoTabla));

    // Ajustar tamaño del panel principal
    jPanel1.setBounds(0, 0, anchoTabla + 20, altoTabla + 120);

    // Ajustar tamaño total de la ventana (dialog)
    this.setSize(anchoTabla + 80, altoTabla + 180);

    // Centrar ventana
    this.setLocationRelativeTo(null);
}
    private void txteliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txteliminarActionPerformed
        // TODO add your handling code here:
       try {
        int numero = Integer.parseInt(txteliminar.getText());
        Object[][] nuevaMatriz = mz.eliminarNumero(matriz, numero);
        this.matriz = convertirObjectAEntero(nuevaMatriz);

        mostrarMatriz(this.matriz); // usa el método principal
        txteliminar.setText("");
    } catch (NumberFormatException e) {
        javax.swing.JOptionPane.showMessageDialog(this, "Ingresa un número válido.");
    }
    }//GEN-LAST:event_txteliminarActionPerformed

    private void buttoneliminarprimoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttoneliminarprimoActionPerformed
        // TODO add your handling code here:
         Object[][] nuevaMatriz = mz.eliminarPrimos(matriz);
    this.matriz = convertirObjectAEntero(nuevaMatriz);
    mostrarMatriz(this.matriz);
    }//GEN-LAST:event_buttoneliminarprimoActionPerformed

    /**
     * @param args the command line arguments
     */
  

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttoneliminarprimo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField txteliminar;
    // End of variables declaration//GEN-END:variables

    private void mostrarMatrizObject(Object[][] matrizObj) {
    int filas = matrizObj.length;
    int columnas = matrizObj[0].length;

    String[] columnasNombres = new String[columnas];
    for (int i = 0; i < columnas; i++) {
        columnasNombres[i] = "Col " + (i + 1);
    }

   jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);

int anchoColumna = 60;
int altoFila = 25;

jTable1.setRowHeight(altoFila);
for (int i = 0; i < columnas; i++) {
    jTable1.getColumnModel().getColumn(i).setPreferredWidth(anchoColumna);
}

int anchoTabla = columnas * anchoColumna;
int altoTabla = filas * altoFila;

jScrollPane1.setPreferredSize(new java.awt.Dimension(anchoTabla, altoTabla));
jScrollPane1.setSize(new java.awt.Dimension(anchoTabla, altoTabla));

jScrollPane1.setViewportView(jTable1);
jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_AS_NEEDED);
jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_AS_NEEDED);

jScrollPane1.revalidate();
jScrollPane1.repaint();

this.setSize(anchoTabla + 60, altoTabla + 160);
this.setLocationRelativeTo(null);
}

   
}
